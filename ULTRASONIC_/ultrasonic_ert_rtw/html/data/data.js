var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"ultrasonic","ref":false,"files":[{"name":"ert_main.c","type":"source","group":"main","path":"D:\\mahmodzidancourse\\ultrasonic_ert_rtw","tag":"","groupDisplay":"Main file","code":"/*\r\n * File: ert_main.c\r\n *\r\n * Code generated for Simulink model 'ultrasonic'.\r\n *\r\n * Model version                  : 1.1\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Mon Jul 15 13:56:03 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include <stddef.h>\r\n#include <stdio.h>            /* This example main program uses printf/fflush */\r\n#include \"ultrasonic.h\"                /* Model header file */\r\n\r\n/*\r\n * Associating rt_OneStep with a real-time clock or interrupt service routine\r\n * is what makes the generated code \"real-time\".  The function rt_OneStep is\r\n * always associated with the base rate of the model.  Subrates are managed\r\n * by the base rate from inside the generated code.  Enabling/disabling\r\n * interrupts and floating point context switches are target specific.  This\r\n * example code indicates where these should take place relative to executing\r\n * the generated code step function.  Overrun behavior should be tailored to\r\n * your application needs.  This example simply sets an error status in the\r\n * real-time model and returns from rt_OneStep.\r\n */\r\nvoid rt_OneStep(void);\r\nvoid rt_OneStep(void)\r\n{\r\n  static boolean_T OverrunFlag = false;\r\n\r\n  /* Disable interrupts here */\r\n\r\n  /* Check for overrun */\r\n  if (OverrunFlag) {\r\n    rtmSetErrorStatus(ultrasonic_M, \"Overrun\");\r\n    return;\r\n  }\r\n\r\n  OverrunFlag = true;\r\n\r\n  /* Save FPU context here (if necessary) */\r\n  /* Re-enable timer or interrupt here */\r\n  /* Set model inputs here */\r\n\r\n  /* Step the model */\r\n  ultrasonic_step();\r\n\r\n  /* Get model outputs here */\r\n\r\n  /* Indicate task complete */\r\n  OverrunFlag = false;\r\n\r\n  /* Disable interrupts here */\r\n  /* Restore FPU context here (if necessary) */\r\n  /* Enable interrupts here */\r\n}\r\n\r\n/*\r\n * The example main function illustrates what is required by your\r\n * application code to initialize, execute, and terminate the generated code.\r\n * Attaching rt_OneStep to a real-time clock is target specific. This example\r\n * illustrates how you do this relative to initializing the model.\r\n */\r\nint_T main(int_T argc, const char *argv[])\r\n{\r\n  /* Unused arguments */\r\n  (void)(argc);\r\n  (void)(argv);\r\n\r\n  /* Initialize model */\r\n  ultrasonic_initialize();\r\n\r\n  /* Attach rt_OneStep to a timer or interrupt service routine with\r\n   * period 0.01 seconds (base rate of the model) here.\r\n   * The call syntax for rt_OneStep is\r\n   *\r\n   *  rt_OneStep();\r\n   */\r\n  printf(\"Warning: The simulation will run forever. \"\r\n         \"Generated ERT main won't simulate model step behavior. \"\r\n         \"To change this behavior select the 'MAT-file logging' option.\\n\");\r\n  fflush((NULL));\r\n  while (rtmGetErrorStatus(ultrasonic_M) == (NULL)) {\r\n    /*  Perform application tasks here */\r\n  }\r\n\r\n  /* Terminate model */\r\n  ultrasonic_terminate();\r\n  return 0;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"ultrasonic.c","type":"source","group":"model","path":"D:\\mahmodzidancourse\\ultrasonic_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * File: ultrasonic.c\r\n *\r\n * Code generated for Simulink model 'ultrasonic'.\r\n *\r\n * Model version                  : 1.1\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Mon Jul 15 13:56:03 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"ultrasonic.h\"\r\n#include \"ULTRASONIC_Bishoy.h\"\r\n\r\n/* Block states (default storage) */\r\nDW_ultrasonic_T ultrasonic_DW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nExtU_ultrasonic_T ultrasonic_U;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nExtY_ultrasonic_T ultrasonic_Y;\r\n\r\n/* Real-time model */\r\nstatic RT_MODEL_ultrasonic_T ultrasonic_M_;\r\nRT_MODEL_ultrasonic_T *const ultrasonic_M = &ultrasonic_M_;\r\n\r\n/* Model step function */\r\nvoid ultrasonic_step(void)\r\n{\r\n  /* Outputs for Atomic SubSystem: '<Root>/ULTRASONIC_Bishoy' */\r\n\r\n  /* Inport: '<Root>/echo_B' incorporates:\r\n   *  Outport: '<Root>/counts_U16'\r\n   */\r\n  ultrasonic_ULTRASONIC_Bishoy(ultrasonic_U.echo_B, &ultrasonic_Y.counts_U16,\r\n    &ultrasonic_DW.ULTRASONIC_Bishoy);\r\n\r\n  /* End of Outputs for SubSystem: '<Root>/ULTRASONIC_Bishoy' */\r\n}\r\n\r\n/* Model initialize function */\r\nvoid ultrasonic_initialize(void)\r\n{\r\n  /* (no initialization code required) */\r\n}\r\n\r\n/* Model terminate function */\r\nvoid ultrasonic_terminate(void)\r\n{\r\n  /* (no terminate code required) */\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"ultrasonic.h","type":"header","group":"model","path":"D:\\mahmodzidancourse\\ultrasonic_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * File: ultrasonic.h\r\n *\r\n * Code generated for Simulink model 'ultrasonic'.\r\n *\r\n * Model version                  : 1.1\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Mon Jul 15 13:56:03 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_ultrasonic_h_\r\n#define RTW_HEADER_ultrasonic_h_\r\n#ifndef ultrasonic_COMMON_INCLUDES_\r\n#define ultrasonic_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                                 /* ultrasonic_COMMON_INCLUDES_ */\r\n\r\n#include \"ultrasonic_types.h\"\r\n#include \"ULTRASONIC_Bishoy.h\"\r\n\r\n/* Macros for accessing real-time model data structure */\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((rtm)->errorStatus)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((rtm)->errorStatus = (val))\r\n#endif\r\n\r\n/* Block states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  DW_ULTRASONIC_Bishoy_ultrason_T ULTRASONIC_Bishoy;/* '<Root>/ULTRASONIC_Bishoy' */\r\n} DW_ultrasonic_T;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  boolean_T echo_B;                    /* '<Root>/echo_B' */\r\n} ExtU_ultrasonic_T;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  real_T counts_U16;                   /* '<Root>/counts_U16' */\r\n} ExtY_ultrasonic_T;\r\n\r\n/* Real-time Model Data Structure */\r\nstruct tag_RTM_ultrasonic_T {\r\n  const char_T * volatile errorStatus;\r\n};\r\n\r\n/* Block states (default storage) */\r\nextern DW_ultrasonic_T ultrasonic_DW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nextern ExtU_ultrasonic_T ultrasonic_U;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nextern ExtY_ultrasonic_T ultrasonic_Y;\r\n\r\n/* Model entry point functions */\r\nextern void ultrasonic_initialize(void);\r\nextern void ultrasonic_step(void);\r\nextern void ultrasonic_terminate(void);\r\n\r\n/* Real-time Model object */\r\nextern RT_MODEL_ultrasonic_T *const ultrasonic_M;\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Use the MATLAB hilite_system command to trace the generated code back\r\n * to the model.  For example,\r\n *\r\n * hilite_system('<S3>')    - opens system 3\r\n * hilite_system('<S3>/Kp') - opens and selects block Kp which resides in S3\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'ultrasonic'\r\n * '<S1>'   : 'ultrasonic/ULTRASONIC_Bishoy'\r\n * '<S2>'   : 'ultrasonic/ULTRASONIC_Bishoy/Chart'\r\n * '<S3>'   : 'ultrasonic/ULTRASONIC_Bishoy/Detect Decrease'\r\n * '<S4>'   : 'ultrasonic/ULTRASONIC_Bishoy/Detect Increase'\r\n * '<S5>'   : 'ultrasonic/ULTRASONIC_Bishoy/Enabled Subsystem'\r\n */\r\n#endif                                 /* RTW_HEADER_ultrasonic_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"ultrasonic_private.h","type":"header","group":"model","path":"D:\\mahmodzidancourse\\ultrasonic_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * File: ultrasonic_private.h\r\n *\r\n * Code generated for Simulink model 'ultrasonic'.\r\n *\r\n * Model version                  : 1.1\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Mon Jul 15 13:56:03 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_ultrasonic_private_h_\r\n#define RTW_HEADER_ultrasonic_private_h_\r\n#include \"rtwtypes.h\"\r\n#include \"ultrasonic_types.h\"\r\n#endif                                 /* RTW_HEADER_ultrasonic_private_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"ultrasonic_types.h","type":"header","group":"model","path":"D:\\mahmodzidancourse\\ultrasonic_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * File: ultrasonic_types.h\r\n *\r\n * Code generated for Simulink model 'ultrasonic'.\r\n *\r\n * Model version                  : 1.1\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Mon Jul 15 13:56:03 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_ultrasonic_types_h_\r\n#define RTW_HEADER_ultrasonic_types_h_\r\n\r\n/* Forward declaration for rtModel */\r\ntypedef struct tag_RTM_ultrasonic_T RT_MODEL_ultrasonic_T;\r\n\r\n#endif                                 /* RTW_HEADER_ultrasonic_types_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"ULTRASONIC_Bishoy.c","type":"source","group":"subsystem","path":"D:\\mahmodzidancourse\\ultrasonic_ert_rtw","tag":"","groupDisplay":"Subsystem files","code":"/*\r\n * File: ULTRASONIC_Bishoy.c\r\n *\r\n * Code generated for Simulink model 'ultrasonic'.\r\n *\r\n * Model version                  : 1.1\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Mon Jul 15 13:56:03 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"rtwtypes.h\"\r\n#include \"ULTRASONIC_Bishoy.h\"\r\n\r\n/* Named constants for Chart: '<S1>/Chart' */\r\n#define ultrasonic_IN_change           ((uint8_T)1U)\r\n#define ultrasonic_IN_hold             ((uint8_T)2U)\r\n\r\n/* Output and update for atomic system: '<Root>/ULTRASONIC_Bishoy' */\r\nvoid ultrasonic_ULTRASONIC_Bishoy(boolean_T rtu_echo_B, real_T *rty_counts_U16,\r\n  DW_ULTRASONIC_Bishoy_ultrason_T *localDW)\r\n{\r\n  boolean_T guard1;\r\n  boolean_T rtb_FixPtRelationalOperator;\r\n\r\n  /* RelationalOperator: '<S4>/FixPt Relational Operator' incorporates:\r\n   *  UnitDelay: '<S4>/Delay Input1'\r\n   *\r\n   * Block description for '<S4>/Delay Input1':\r\n   *\r\n   *  Store in Global RAM\r\n   */\r\n  rtb_FixPtRelationalOperator = ((int32_T)rtu_echo_B > (int32_T)\r\n    localDW->DelayInput1_DSTATE);\r\n\r\n  /* UnitDelay: '<S3>/Delay Input1' incorporates:\r\n   *  UnitDelay: '<S4>/Delay Input1'\r\n   *\r\n   * Block description for '<S3>/Delay Input1':\r\n   *\r\n   *  Store in Global RAM\r\n   *\r\n   * Block description for '<S4>/Delay Input1':\r\n   *\r\n   *  Store in Global RAM\r\n   */\r\n  localDW->DelayInput1_DSTATE = localDW->DelayInput1_DSTATE_e;\r\n\r\n  /* Chart: '<S1>/Chart' */\r\n  guard1 = false;\r\n  if (localDW->is_active_c3_ultrasonic == 0U) {\r\n    localDW->is_active_c3_ultrasonic = 1U;\r\n    localDW->is_c3_ultrasonic = ultrasonic_IN_hold;\r\n\r\n    /* Outputs for Enabled SubSystem: '<S1>/Enabled Subsystem' incorporates:\r\n     *  EnablePort: '<S5>/Enable'\r\n     */\r\n    localDW->EnabledSubsystem_MODE = false;\r\n\r\n    /* End of Outputs for SubSystem: '<S1>/Enabled Subsystem' */\r\n  } else if (localDW->is_c3_ultrasonic == ultrasonic_IN_change) {\r\n    if ((int32_T)rtu_echo_B < (int32_T)localDW->DelayInput1_DSTATE) {\r\n      localDW->is_c3_ultrasonic = ultrasonic_IN_hold;\r\n\r\n      /* Outputs for Enabled SubSystem: '<S1>/Enabled Subsystem' incorporates:\r\n       *  EnablePort: '<S5>/Enable'\r\n       */\r\n      localDW->EnabledSubsystem_MODE = false;\r\n\r\n      /* End of Outputs for SubSystem: '<S1>/Enabled Subsystem' */\r\n    } else {\r\n      guard1 = true;\r\n    }\r\n\r\n    /* case IN_hold: */\r\n  } else if (rtb_FixPtRelationalOperator) {\r\n    localDW->is_c3_ultrasonic = ultrasonic_IN_change;\r\n    guard1 = true;\r\n  } else {\r\n    /* Outputs for Enabled SubSystem: '<S1>/Enabled Subsystem' incorporates:\r\n     *  EnablePort: '<S5>/Enable'\r\n     */\r\n    localDW->EnabledSubsystem_MODE = false;\r\n\r\n    /* End of Outputs for SubSystem: '<S1>/Enabled Subsystem' */\r\n  }\r\n\r\n  if (guard1) {\r\n    /* Outputs for Enabled SubSystem: '<S1>/Enabled Subsystem' incorporates:\r\n     *  EnablePort: '<S5>/Enable'\r\n     */\r\n    if (!localDW->EnabledSubsystem_MODE) {\r\n      /* InitializeConditions for Delay: '<S5>/Delay' */\r\n      localDW->Delay_DSTATE = 0.0;\r\n      localDW->EnabledSubsystem_MODE = true;\r\n    }\r\n\r\n    /* Sum: '<S5>/Add' incorporates:\r\n     *  Constant: '<S5>/Constant'\r\n     *  Delay: '<S5>/Delay'\r\n     */\r\n    *rty_counts_U16 = localDW->Delay_DSTATE + 1.0;\r\n\r\n    /* Update for Delay: '<S5>/Delay' */\r\n    localDW->Delay_DSTATE = *rty_counts_U16;\r\n\r\n    /* End of Outputs for SubSystem: '<S1>/Enabled Subsystem' */\r\n  }\r\n\r\n  /* End of Chart: '<S1>/Chart' */\r\n\r\n  /* Update for UnitDelay: '<S4>/Delay Input1'\r\n   *\r\n   * Block description for '<S4>/Delay Input1':\r\n   *\r\n   *  Store in Global RAM\r\n   */\r\n  localDW->DelayInput1_DSTATE = rtu_echo_B;\r\n\r\n  /* Update for UnitDelay: '<S3>/Delay Input1'\r\n   *\r\n   * Block description for '<S3>/Delay Input1':\r\n   *\r\n   *  Store in Global RAM\r\n   */\r\n  localDW->DelayInput1_DSTATE_e = rtu_echo_B;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"ULTRASONIC_Bishoy.h","type":"header","group":"subsystem","path":"D:\\mahmodzidancourse\\ultrasonic_ert_rtw","tag":"","groupDisplay":"Subsystem files","code":"/*\r\n * File: ULTRASONIC_Bishoy.h\r\n *\r\n * Code generated for Simulink model 'ultrasonic'.\r\n *\r\n * Model version                  : 1.1\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Mon Jul 15 13:56:03 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_ULTRASONIC_Bishoy_h_\r\n#define RTW_HEADER_ULTRASONIC_Bishoy_h_\r\n#ifndef ultrasonic_COMMON_INCLUDES_\r\n#define ultrasonic_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                                 /* ultrasonic_COMMON_INCLUDES_ */\r\n\r\n/* Block states (default storage) for system '<Root>/ULTRASONIC_Bishoy' */\r\ntypedef struct {\r\n  real_T Delay_DSTATE;                 /* '<S5>/Delay' */\r\n  boolean_T DelayInput1_DSTATE;        /* '<S4>/Delay Input1' */\r\n  boolean_T DelayInput1_DSTATE_e;      /* '<S3>/Delay Input1' */\r\n  uint8_T is_active_c3_ultrasonic;     /* '<S1>/Chart' */\r\n  uint8_T is_c3_ultrasonic;            /* '<S1>/Chart' */\r\n  boolean_T EnabledSubsystem_MODE;     /* '<S1>/Enabled Subsystem' */\r\n} DW_ULTRASONIC_Bishoy_ultrason_T;\r\n\r\nextern void ultrasonic_ULTRASONIC_Bishoy(boolean_T rtu_echo_B, real_T\r\n  *rty_counts_U16, DW_ULTRASONIC_Bishoy_ultrason_T *localDW);\r\n\r\n#endif                                 /* RTW_HEADER_ULTRASONIC_Bishoy_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"D:\\mahmodzidancourse\\ultrasonic_ert_rtw","tag":"","groupDisplay":"Utility files","code":"/*\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'ultrasonic'.\r\n *\r\n * Model version                  : 1.1\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Mon Jul 15 13:56:03 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: Intel->x86-64 (Windows64)\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32\r\n *                       native word size:  64\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T.                        *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*===========================================================================*\r\n * Complex number type definitions                                           *\r\n *===========================================================================*/\r\n#define CREAL_T\r\n\r\ntypedef struct {\r\n  real32_T re;\r\n  real32_T im;\r\n} creal32_T;\r\n\r\ntypedef struct {\r\n  real64_T re;\r\n  real64_T im;\r\n} creal64_T;\r\n\r\ntypedef struct {\r\n  real_T re;\r\n  real_T im;\r\n} creal_T;\r\n\r\n#define CINT8_T\r\n\r\ntypedef struct {\r\n  int8_T re;\r\n  int8_T im;\r\n} cint8_T;\r\n\r\n#define CUINT8_T\r\n\r\ntypedef struct {\r\n  uint8_T re;\r\n  uint8_T im;\r\n} cuint8_T;\r\n\r\n#define CINT16_T\r\n\r\ntypedef struct {\r\n  int16_T re;\r\n  int16_T im;\r\n} cint16_T;\r\n\r\n#define CUINT16_T\r\n\r\ntypedef struct {\r\n  uint16_T re;\r\n  uint16_T im;\r\n} cuint16_T;\r\n\r\n#define CINT32_T\r\n\r\ntypedef struct {\r\n  int32_T re;\r\n  int32_T im;\r\n} cint32_T;\r\n\r\n#define CUINT32_T\r\n\r\ntypedef struct {\r\n  uint32_T re;\r\n  uint32_T im;\r\n} cuint32_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"cm":{"GlobalVarInfo":[{"Name":"ultrasonic.c:ultrasonic_M_","Size":8,"File":["D:\\mahmodzidancourse\\ultrasonic_ert_rtw\\ultrasonic.c"],"IsStatic":true,"IsBitField":false,"IsExported":true,"UseCount":0,"Members":{"Name":"errorStatus","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},"UseInFunctions":[]},{"Name":"ultrasonic_DW","Size":16,"File":["D:\\mahmodzidancourse\\ultrasonic_ert_rtw\\ultrasonic.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":1,"Members":{"Name":"ULTRASONIC_Bishoy","File":2,"Size":16,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[{"Name":"Delay_DSTATE","File":5,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"ultrasonic_step","UseCount":1}},{"Name":"DelayInput1_DSTATE","File":5,"Size":1,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"ultrasonic_step","UseCount":1}},{"Name":"DelayInput1_DSTATE_e","File":5,"Size":1,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"ultrasonic_step","UseCount":1}},{"Name":"is_active_c3_ultrasonic","File":5,"Size":1,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"ultrasonic_step","UseCount":1}},{"Name":"is_c3_ultrasonic","File":5,"Size":1,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"ultrasonic_step","UseCount":1}},{"Name":"EnabledSubsystem_MODE","File":5,"Size":1,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"ultrasonic_step","UseCount":1}}],"UseInFunctions":{"FunctionName":"ultrasonic_step","UseCount":1}},"UseInFunctions":{"FunctionName":"ultrasonic_step","UseCount":1}},{"Name":"ultrasonic_U","Size":1,"File":["D:\\mahmodzidancourse\\ultrasonic_ert_rtw\\ultrasonic.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":1,"Members":{"Name":"echo_B","File":2,"Size":1,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"ultrasonic_step","UseCount":1}},"UseInFunctions":{"FunctionName":"ultrasonic_step","UseCount":1}},{"Name":"ultrasonic_Y","Size":8,"File":["D:\\mahmodzidancourse\\ultrasonic_ert_rtw\\ultrasonic.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":1,"Members":{"Name":"counts_U16","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"ultrasonic_step","UseCount":1}},"UseInFunctions":{"FunctionName":"ultrasonic_step","UseCount":1}}],"GlobalConstInfo":[],"FcnInfo":[{"Name":"ultrasonic_ULTRASONIC_Bishoy","UniqueKey":"$ultrasonic_ULTRASONIC_Bishoy","Idx":1,"NumCommentLines":55,"NumTotalLines":108,"NumCodeLines":33,"Callee":[],"Caller":{"Name":"ultrasonic_step","Weight":1},"Stack":19,"HasDefinition":1,"File":["D:\\mahmodzidancourse\\ultrasonic_ert_rtw\\ULTRASONIC_Bishoy.c"],"IsStatic":0,"Complexity":7,"StackTotal":19,"CalleeIdx":[]},{"Name":"ultrasonic_initialize","UniqueKey":"$ultrasonic_initialize","Idx":2,"NumCommentLines":1,"NumTotalLines":4,"NumCodeLines":0,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["D:\\mahmodzidancourse\\ultrasonic_ert_rtw\\ultrasonic.c"],"IsStatic":0,"Complexity":1,"StackTotal":0,"CalleeIdx":[]},{"Name":"ultrasonic_step","UniqueKey":"$ultrasonic_step","Idx":3,"NumCommentLines":5,"NumTotalLines":12,"NumCodeLines":2,"Callee":{"Name":"ultrasonic_ULTRASONIC_Bishoy","Weight":1},"Caller":[],"Stack":0,"HasDefinition":1,"File":["D:\\mahmodzidancourse\\ultrasonic_ert_rtw\\ultrasonic.c"],"IsStatic":0,"Complexity":1,"StackTotal":19,"CalleeIdx":1},{"Name":"ultrasonic_terminate","UniqueKey":"$ultrasonic_terminate","Idx":4,"NumCommentLines":1,"NumTotalLines":4,"NumCodeLines":0,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["D:\\mahmodzidancourse\\ultrasonic_ert_rtw\\ultrasonic.c"],"IsStatic":0,"Complexity":1,"StackTotal":0,"CalleeIdx":[]}]},"coverage":[{"id":"SimulinkCoverage","name":"Simulink Coverage","files":[]},{"id":"Bullseye","name":"Bullseye Coverage","files":[]},{"id":"LDRA","name":"LDRA Testbed","files":[]}],"features":{"annotation":false,"coverage":true,"profiling":true,"tooltip":true,"coverageTooltip":true,"showJustificationLinks":true,"useMWTable":false,"showProfilingInfo":true,"showTaskSummary":true}};